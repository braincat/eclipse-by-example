/*
 * generated by Xtext
 */
package com.hsveclipse.phototoolkit.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.hsveclipse.phototoolkit.services.DLSGrammarAccess;

public class DLSParser extends AbstractContentAssistParser {
	
	@Inject
	private DLSGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.hsveclipse.phototoolkit.ui.contentassist.antlr.internal.InternalDLSParser createParser() {
		com.hsveclipse.phototoolkit.ui.contentassist.antlr.internal.InternalDLSParser result = new com.hsveclipse.phototoolkit.ui.contentassist.antlr.internal.InternalDLSParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getSiteAccess().getAlternatives_1(), "rule__Site__Alternatives_1");
					put(grammarAccess.getSiteAccess().getGroup(), "rule__Site__Group__0");
					put(grammarAccess.getGalleryAccess().getGroup(), "rule__Gallery__Group__0");
					put(grammarAccess.getGalleryAccess().getGroup_4(), "rule__Gallery__Group_4__0");
					put(grammarAccess.getGalleryAccess().getGroup_5(), "rule__Gallery__Group_5__0");
					put(grammarAccess.getPhotoAccess().getGroup(), "rule__Photo__Group__0");
					put(grammarAccess.getPhotoAccess().getGroup_4(), "rule__Photo__Group_4__0");
					put(grammarAccess.getPhotoAccess().getGroup_5(), "rule__Photo__Group_5__0");
					put(grammarAccess.getPhotoAccess().getGroup_6(), "rule__Photo__Group_6__0");
					put(grammarAccess.getSiteAccess().getPhotosAssignment_1_0(), "rule__Site__PhotosAssignment_1_0");
					put(grammarAccess.getSiteAccess().getGalleriesAssignment_1_1(), "rule__Site__GalleriesAssignment_1_1");
					put(grammarAccess.getGalleryAccess().getNameAssignment_2(), "rule__Gallery__NameAssignment_2");
					put(grammarAccess.getGalleryAccess().getDescriptionAssignment_4_1(), "rule__Gallery__DescriptionAssignment_4_1");
					put(grammarAccess.getGalleryAccess().getPhotosAssignment_5_1(), "rule__Gallery__PhotosAssignment_5_1");
					put(grammarAccess.getPhotoAccess().getNameAssignment_2(), "rule__Photo__NameAssignment_2");
					put(grammarAccess.getPhotoAccess().getUriAssignment_4_1(), "rule__Photo__UriAssignment_4_1");
					put(grammarAccess.getPhotoAccess().getDescriptionAssignment_5_1(), "rule__Photo__DescriptionAssignment_5_1");
					put(grammarAccess.getPhotoAccess().getTagsAssignment_6_1(), "rule__Photo__TagsAssignment_6_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.hsveclipse.phototoolkit.ui.contentassist.antlr.internal.InternalDLSParser typedParser = (com.hsveclipse.phototoolkit.ui.contentassist.antlr.internal.InternalDLSParser) parser;
			typedParser.entryRuleSite();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DLSGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DLSGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
